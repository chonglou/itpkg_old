界面上 最终是pt的拖动效果 初期完全不予考虑，使用redmine的每个操作一个页面的方式 这样可以方便将来升级


所有功能未登录用户不允许使用 

权限这些在测试脚本里要体现出来

数据库不允许物理删除数据 所有的删除都是假删除 即标记为done 不再显示（这么设计是为了方便追踪）


项目管理
admin角色可以进行修改 一般不允许删除 除非story为空 即便删除也只是在数据库把status列变为done
相当于区分用户组 普通用户见无权限差别 同下

用户只有三种角色
管理员 amdin？ 这个已经有了       只是比普通用户多了个项目的增删改功能
普通用户 employee 这个名称随你定
匿名用户 无任何权限

Story
所有登录角色都可以操作 增删查改 同样 

Task
所有登录角色都可以操作 任何项目用户都可以改
我们在自己设计的时候 task要能增加详细信息

task和story的状态转换可以参照pt（简单点就好） 任何项目用户都可以改

每个story和task都用户可以加评注 评注只有自己可以修改及删除

story和task可以通用label label是为了方便做搜索

说到这里 删除的可以确认了 关于修改 有个问题：比如 用户如果清空了某个内容（例如 A创建了一个story B虽然没有删除权限 但是有修改权限 可以把该story的内容变为' ' 就是清空了 这种操作完全允许 只是旧内容会在数据库以老版本方式存在 这样便于手工恢复） 也相当与变相删除了 这个建议加一个version列 每修改一次 增加1 只显示最新的那个(数据库压力会大 但是可以通过定期压缩数据库来解决 这个我有统一的定时任务)

具体实现建议
每个task和story comment 
都有一个自增长id 及一个UUID 具体检索用UUID 记得加index
都有一个version 每修改一次 version增加1 只显示最新的（除了删除 没必要标记为done）

最后
如果project task story有更新 每天定时把更新信息发邮件给相关用户 

这样设计是为了减少鼠标点击

用户管理确认邮件 这么设计是为了避免误操作 比如：直接添加了不该添加的用户 那么对方就立刻有了权限 这个确认过程通常会花上时间 

sidekiq支持邮件延迟发送

看到了吧 每个task 要能设置优先级（紧急 高 普通 低）通过颜色区分

以pdf附件方式是为了方便打印 也是为了避免修改

分工

1: pdf模块有现成的 初期不用管 这个就是先生成excel表 然后转pdf
2：邮件通知/确认链接 初期不用管 当前机制尚不完善 JZ需要更多设计

开发顺序:
项目管理
story管理
task管理
comment管理











