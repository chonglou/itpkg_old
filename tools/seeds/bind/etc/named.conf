// vim:set ts=4 sw=4 et:

options {
    directory "/var/named";
    pid-file "/run/named/named.pid";

    listen-on-v6 { any; };
    listen-on { any; };

    allow-recursion { 127.0.0.1; };
    allow-transfer { none; };
    allow-update { none; };

    version none;
    hostname none;
    server-id none;
};

zone "localhost" IN {
    type master;
    file "localhost.zone";
};

zone "0.0.127.in-addr.arpa" IN {
    type master;
    file "127.0.0.zone";
};

zone "255.in-addr.arpa" IN {
    type master;
    file "empty.zone";
};

zone "0.in-addr.arpa" IN {
    type master;
    file "empty.zone";
};

zone "." IN {
    type hint;
    file "root.hint";
};




acl "acl_#{code}" {
  geoip country #{country};
  #{"geoip region #{region};" unless region=='*'};
  #{"geoip city #{city};" unless city=='*'};
};

view "view_#{code}" {
  match-clients { acl_#{code}; };
  dlz "dlz_#{code}" {
    database "mysql
    {host=#{cfg.fetch(:mysql).fetch :host} dbname=#{Rails.configuration.database_configuration[Rails.env]['database']} user=dns pass=#{cfg.fetch(:mysql).fetch :password} ssl=false}
    {SELECT zone FROM dns_records WHERE zone = '$zone$' AND code=#{code}}
    {SELECT ttl, type, mx_priority, IF(type = 'TXT', CONCAT('\"',data,'\"'), data) AS data FROM dns_records WHERE zone = '$zone$' AND host = '$record$' AND type <> 'SOA' AND type <> 'NS' AND code=#{code}}
    {SELECT ttl, type, data, primary_ns, resp_person, serial, refresh, retry, expire, minimum FROM dns_records WHERE zone = '$zone$' AND (type = 'SOA' OR type='NS') AND code=#{code}}
    {SELECT ttl, type, host, mx_priority, IF(type = 'TXT', CONCAT('\"',data,'\"'), data) AS data, resp_person, serial, refresh, retry, expire, minimum FROM dns_records WHERE zone = '$zone$' AND type <> 'SOA' AND type <> 'NS' AND code=#{code}}
    {SELECT zone FROM dns_xfrs where zone='$zone$' AND client = '$client$' AND code=#{code} limit 1}";
    {UPDATE dns_counts SET count=count+1, update_at='NOW()' WHERE zone ='%zone%' AND AND code=#{code}}";
  };
};


view "default" {
  dlz "mysql_zone_#{code}" {
    database "mysql
    {host=#{cfg.fetch(:mysql).fetch :host} dbname=#{Rails.configuration.database_configuration[Rails.env]['database']} user=dns pass=#{cfg.fetch(:mysql).fetch :password} ssl=false}
    {SELECT zone FROM dns_records WHERE zone = '$zone$' AND code=0}
    {SELECT ttl, type, mx_priority, IF(type = 'TXT', CONCAT('\"',data,'\"'), data) AS data FROM dns_records WHERE zone = '$zone$' AND host = '$record$' AND type <> 'SOA' AND type <> 'NS' AND code=0}
    {SELECT ttl, type, data, primary_ns, resp_person, serial, refresh, retry, expire, minimum FROM dns_records WHERE zone = '$zone$' AND (type = 'SOA' OR type='NS') AND code=0}
    {SELECT ttl, type, host, mx_priority, IF(type = 'TXT', CONCAT('\"',data,'\"'), data) AS data, resp_person, serial, refresh, retry, expire, minimum FROM dns_records WHERE zone = '$zone$' AND type <> 'SOA' AND type <> 'NS' AND code=0}
    {SELECT zone FROM dns_xfrs where zone='$zone$' AND client = '$client$'  AND code=0 LIMIT 1}";
    {UPDATE dns_counts SET count=count+1, update_at='NOW()' WHERE zone ='%zone%' AND code=0}";
  };
};

