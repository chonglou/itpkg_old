upstream #{domain}.conf {
#{backs.map { |b| "  server #{b};" }.join "\n"}
}

server {
  listen #{ssl ? 443 : 80};
  server_name localhost;
  access_log /var/log/nginx/#{domain}.access;
  error_log /var/log/nginx/#{domain}.error;

  location / {
    memcached_pass #{memcached};
    default_type text/html;
	  error_page 404 = @fallback;

	  if ($http_pragma ~* "no-cache") {
	     return 404;
	  }
	  if ($http_cache_control ~* "no-cache") {
	     return 404;
	  }
    #{https if ssl}
	  set $enhanced_memcached_key "$request_uri";
	  set $enhanced_memcached_key_namespace "$host";
    set $enhanced_memcached_expire $http_memcached_expire;

	  enhanced_memcached_hash_keys_with_md5 on;
	  enhanced_memcached_pass memcached_upstream;
	}

	location @fallback {
    #proxy_set_header  X-Forwarded-Proto http;
    #proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    #proxy_set_header  Host $http_host;
    #proxy_set_header  X-Real-IP $remote_addr;

    #proxy_redirect off;
    proxy_pass http://#{domain}.conf;
	}

}


ssl  on;
  ssl_certificate  ssl/#{domain}.pem;
  ssl_certificate_key  ssl/#{domain}.pem;
  ssl_session_timeout  5m;
  ssl_protocols  SSLv2 SSLv3 TLSv1;
  ssl_ciphers  RC4:HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers  on;

